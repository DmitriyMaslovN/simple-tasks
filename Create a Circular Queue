class CircularQueue {
   constructor(size) {

     this.queue = [];
     this.read = 0;
     this.write = 0;
     this.max = size - 1;

     while (size > 0) {
        this.queue.push(null);
        size--;
     }

   }

   print() {
     return this.queue;
   }


   enqueue(item) {
    // Only change code below this line

     if(this.write > this.max){
       this.write = 0;
     }

     if(this.queue[this.write] === null ){
       this.queue.splice(this.write, 1, item);
       this.write++
       return item;
     }else{
       return null;
     }

    // Only change code above this line
   }

   dequeue() {
    // Only change code below this line
    if(this.read > this.max){
       this.read = 0;
     }

     if(this.queue[this.read] !== null){
      let arr =  this.queue.splice(this.read, 1, null)[0];
      this.read++
      return arr;
     }else{
       return null;
     }
    // Only change code above this line
   }
}
