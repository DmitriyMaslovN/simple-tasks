function PriorityQueue () {
    this.collection = [];
    this.printCollection = function() {
      console.log(this.collection);  
    };
    
    this.enqueue = (val) => { 
       this.collection.reverse(); // first in
      let index = this.collection.findIndex(item => {
       return val[1] >= item[1]       
        });
     
        if (index >= 0) {
           this.collection.splice(index, 0, val); 
        } else {
            this.collection.push(val);
        }
      this.collection.reverse(); // first out
    }
    this.dequeue = () => {
        return this.collection.shift()[0];
    }
    this.size = () => {
       return this.collection.length;
    }
    this.front = () => {
        return this.collection[0];
    }
    this.isEmpty = () => {
      return this.collection.length === 0;
    }
    
}
let obj = new PriorityQueue();

obj.enqueue( ['dog', 2] );
obj.enqueue(['rabbit', 2]);
obj.enqueue(['kitten', 3]);
obj.enqueue( ['human', 1] );
obj.enqueue(['kitten', 2]);

//[['human',1],['dog',2],['rabbit',2],['kitten',2],[;kitten',3]]
obj.printCollection()
